apiVersion: v1
kind: Pod
metadata:
  uid: 4a584606-88f2-47bb-9559-d20c0ec3a48e
  name: coredns-7448775847-fswg4
  labels:
    k8s-app: kube-dns
    pod-template-hash: "7448775847"
    eks.amazonaws.com/component: coredns
  namespace: kube-system
  annotations:
    eks.amazonaws.com/compute-type: ec2
    expected-ready: "true"
  generateName: coredns-7448775847-
  ownerReferences:
    - uid: 3b4888e3-9330-4148-b0f4-559ceb4c6463
      kind: ReplicaSet
      name: coredns-7448775847
      apiVersion: apps/v1
      controller: true
      blockOwnerDeletion: true
  creationTimestamp: 2024-07-25T09:59:41Z
spec:
  volumes:
    - name: config-volume
      configMap:
        name: coredns
        items:
          - key: Corefile
            path: Corefile
        defaultMode: 420
    - name: kube-api-access-2jl46
      projected:
        sources:
          - serviceAccountToken:
              path: token
              expirationSeconds: 3607
          - configMap:
              name: kube-root-ca.crt
              items:
                - key: ca.crt
                  path: ca.crt
          - downwardAPI:
              items:
                - path: namespace
                  fieldRef:
                    fieldPath: metadata.namespace
                    apiVersion: v1
        defaultMode: 420
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: kubernetes.io/os
                values:
                  - linux
                operator: In
              - key: kubernetes.io/arch
                values:
                  - amd64
                  - arm64
                operator: In
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            topologyKey: kubernetes.io/hostname
            labelSelector:
              matchExpressions:
                - key: k8s-app
                  values:
                    - kube-dns
                  operator: In
  nodeName: ip-10-0-5-138.eu-west-1.compute.internal
  priority: 2000000000
  dnsPolicy: Default
  containers:
    - args:
        - -conf
        - /etc/coredns/Corefile
      name: coredns
      image: 602401143452.dkr.ecr.eu-west-1.amazonaws.com/eks/coredns:v1.11.1-eksbuild.9
      ports:
        - name: dns
          protocol: UDP
          containerPort: 53
        - name: dns-tcp
          protocol: TCP
          containerPort: 53
        - name: metrics
          protocol: TCP
          containerPort: 9153
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      volumeMounts:
        - name: config-volume
          readOnly: true
          mountPath: /etc/coredns
        - name: kube-api-access-2jl46
          readOnly: true
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      livenessProbe:
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        periodSeconds: 10
        timeoutSeconds: 5
        failureThreshold: 5
        successThreshold: 1
        initialDelaySeconds: 60
      readinessProbe:
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        timeoutSeconds: 1
        failureThreshold: 3
        successThreshold: 1
      imagePullPolicy: IfNotPresent
      securityContext:
        capabilities:
          add:
            - NET_BIND_SERVICE
          drop:
            - ALL
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
  tolerations:
    - key: node-role.kubernetes.io/control-plane
      effect: NoSchedule
    - key: CriticalAddonsOnly
      operator: Exists
    - key: node.kubernetes.io/not-ready
      effect: NoExecute
      operator: Exists
      tolerationSeconds: 300
    - key: node.kubernetes.io/unreachable
      effect: NoExecute
      operator: Exists
      tolerationSeconds: 300
  restartPolicy: Always
  schedulerName: default-scheduler
  serviceAccount: coredns
  securityContext: {}
  preemptionPolicy: PreemptLowerPriority
  priorityClassName: system-cluster-critical
  enableServiceLinks: true
  serviceAccountName: coredns
  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      labelSelector:
        matchLabels:
          k8s-app: kube-dns
      whenUnsatisfiable: ScheduleAnyway
  terminationGracePeriodSeconds: 30
status:
  phase: Running
  podIP: 10.0.5.98
  hostIP: 10.0.5.138
  podIPs:
    - ip: 10.0.5.98
  hostIPs:
    - ip: 10.0.5.138
  qosClass: Burstable
  startTime: 2024-07-25T09:59:41Z
  conditions:
    - type: ContainersReady
      status: "True"
    - type: Initialized
      status: "True"
    - type: PodReadyToStartContainers
      status: "True"
    - type: PodScheduled
      status: "True"
    - type: Ready
      status: "True"
  containerStatuses:
    - name: coredns
      image: 602401143452.dkr.ecr.eu-west-1.amazonaws.com/eks/coredns:v1.11.1-eksbuild.9
      ready: true
      state:
        running:
          startedAt: 2024-07-25T09:59:43Z
      imageID: 602401143452.dkr.ecr.eu-west-1.amazonaws.com/eks/coredns@sha256:9bd83563b3843c9cb02c29b7935b4fdbc93bd74c4c96bc2688b87fb4f761f040
      started: true
      lastState: {}
      containerID: containerd://86a46915f1b2eff37e8a636c59f1c7df428632c8a034006d7b15d00439f7d491
      restartCount: 0
