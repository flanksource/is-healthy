apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: '2024-07-29T06:32:55Z'
  generateName: nginx-deployment-559c4fc45b-
  labels:
    app: nginx
    pod-template-hash: 559c4fc45b
  name: nginx-deployment-559c4fc45b-xdlmh
  namespace: default
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-deployment-559c4fc45b
      uid: 28b8d6dd-1ffe-4ede-8e24-0bafa3bb71e3
  resourceVersion: '68571321'
  uid: 9d304944-d50a-4b8a-971a-7fcad1a4ca9f
spec:
  containers:
    - image: nginx:alpine
      imagePullPolicy: IfNotPresent
      name: nginx
      ports:
        - containerPort: 80
          protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 80
          scheme: HTTP
        initialDelaySeconds: 300
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-ssdbh
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: saka
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: kube-api-access-ssdbh
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastTransitionTime: '2024-07-29T06:32:55Z'
      status: 'True'
      type: Initialized
    - lastTransitionTime: '2024-07-29T06:32:55Z'
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: 'False'
      type: Ready
    - lastTransitionTime: '2024-07-29T06:32:55Z'
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: 'False'
      type: ContainersReady
    - lastTransitionTime: '2024-07-29T06:32:55Z'
      status: 'True'
      type: PodScheduled
  containerStatuses:
    - containerID: containerd://01d5d0ded389b8dffa95f85fc8cb9a8a1bf916beae74a75dd7a62bc10dabef01
      image: docker.io/library/nginx:alpine
      imageID: docker.io/library/nginx@sha256:208b70eefac13ee9be00e486f79c695b15cef861c680527171a27d253d834be9
      lastState: {}
      name: nginx
      ready: false
      restartCount: 0
      started: true
      state:
        running:
          startedAt: '2024-07-29T06:32:56Z'
  hostIP: 10.99.99.8
  phase: Running
  podIP: 10.42.2.27
  podIPs:
    - ip: 10.42.2.27
  qosClass: BestEffort
  startTime: '2024-07-29T06:32:55Z'
